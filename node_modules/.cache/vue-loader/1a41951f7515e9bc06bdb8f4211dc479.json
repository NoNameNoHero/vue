{"remainingRequest":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\src\\views\\Test.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\src\\views\\Test.vue","mtime":1551788711918},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np, input, td{\n  font-size: 14px;\n}\ntable{\n  margin: 0 auto;\n  width: 1000px;\n  border-collapse: collapse;\n}\ntable td{\n  padding: 5px 10px;\n  border: 1px solid black;\n}\ntd.btns{\n  border: none;\n}\ninput:disabled{\n  text-align: center;\n  border: none;\n  background: none;\n  color: black;\n}\n.status{\n  cursor: pointer;\n}\n.status:hover{\n  background-color: #eee;\n}\n",{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Test.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <h3>Задачи в работе</h3>\r\n    <table v-if=\"filteredInWork.length\">\r\n      <thead>\r\n        <tr>\r\n          <th>№</th>\r\n          <th>title</th>\r\n          <th>description</th>\r\n          <th>status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(item, i) in filteredInWork\" :key=\"item.id\">\r\n        <td>{{i}}</td>\r\n        <td><input type=\"text\" v-model=\"item.title\" v-bind:disabled=\"!(!!~check.indexOf(item.id))\"/></td>\r\n        <td><input type=\"text\" v-model=\"item.msg\" v-bind:disabled=\"!(!!~check.indexOf(item.id))\"/></td>\r\n        <td class=\"status\" @dblclick=\"changeStatus({id: item.id})\">{{item.status}}</td>\r\n        <td class=\"btns\"><button @click=\"toggleInp({ id: item.id, title: item.title, msg: item.msg })\"> \r\n          <template v-if=\"!(!!~check.indexOf(item.id))\">\r\n            редактировать\r\n          </template>\r\n          <template v-else>\r\n            принять\r\n          </template>\r\n        </button></td>\r\n        <td class=\"btns\"><button @click=\"del({id: item.id})\">удалить</button></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>Список задач пуст!</p>\r\n    <br><br>\r\n    <h3>Завершенные задачи</h3>\r\n    <table v-if=\"filteredDone.length\">\r\n      <thead>\r\n        <tr>\r\n          <th>№</th>\r\n          <th>title</th>\r\n          <th>description</th>\r\n          <th>status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(item, i) in filteredDone\" :key=\"item.id\">\r\n        <td>{{i}}</td>\r\n        <td>{{item.title}}</td>\r\n        <td>{{item.msg}}</td>\r\n        <td class=\"status\" @dblclick=\"changeStatus({id: item.id})\">{{item.status}}</td>\r\n        <td class=\"btns\"><button @click=\"del({id: item.id})\">удалить</button></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>Завершенных задач пока нет!</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      editable: []\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      del: 'delPoint',\r\n      changeStatus: 'changeStatus',\r\n      changePoint: 'changePoint'\r\n    }),\r\n    toggleInp ({id, title, msg}) {\r\n      if (!!~this.editable.indexOf(id)) {\r\n        this.editable.forEach((item, i, arr) => { if (item === id) { arr.splice(i, 1) } })\r\n      } else {\r\n        this.editable.push(id)\r\n      }\r\n      this.changePoint({ id, title, msg })\r\n    }\r\n  },\r\n  computed: {\r\n    filteredInWork () {\r\n      return this.$store.state.todoList.filter(item => item.status === 'выполняется')\r\n    },\r\n    filteredDone () {\r\n      return this.$store.state.todoList.filter(item => item.status === 'завершена')\r\n    },\r\n    check () {\r\n      return this.editable\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  p, input, td{\r\n    font-size: 14px;\r\n  }\r\n  table{\r\n    margin: 0 auto;\r\n    width: 1000px;\r\n    border-collapse: collapse;\r\n  }\r\n  table td{\r\n    padding: 5px 10px;\r\n    border: 1px solid black;\r\n  }\r\n  td.btns{\r\n    border: none;\r\n  }\r\n  input:disabled{\r\n    text-align: center;\r\n    border: none;\r\n    background: none;\r\n    color: black;\r\n  }\r\n  .status{\r\n    cursor: pointer;\r\n  }\r\n  .status:hover{\r\n    background-color: #eee;\r\n  }\r\n</style>"]}]}