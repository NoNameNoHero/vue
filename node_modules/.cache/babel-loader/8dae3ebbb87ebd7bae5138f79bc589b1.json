{"remainingRequest":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\src\\store.js","dependencies":[{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\src\\store.js","mtime":1551789326907},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\a.nastarchuk\\\\Desktop\\\\projects\\\\routenvuex\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    currentId: 0,\n    todoList: []\n  },\n  mutations: {\n    addPoint: function addPoint(state, _ref) {\n      var title = _ref.title,\n          msg = _ref.msg;\n      state.todoList.push({\n        'id': state.currentId++,\n        'title': title,\n        'msg': msg,\n        'status': 'выполняется'\n      });\n    },\n    changePoint: function changePoint(state, _ref2) {\n      var id = _ref2.id,\n          title = _ref2.title,\n          msg = _ref2.msg;\n      state.todoList.forEach(function (item) {\n        if (item.id === id) {\n          item.title = title;\n          item.msg = msg;\n        }\n      });\n    },\n    changeStatus: function changeStatus(state, _ref3) {\n      var id = _ref3.id;\n      state.todoList.forEach(function (item, i, arr) {\n        if (item.id === id) {\n          item.status === 'выполняется' ? item.status = 'завершена' : item.status = 'выполняется';\n        }\n      });\n    },\n    delPoint: function delPoint(state, _ref4) {\n      var id = _ref4.id;\n      state.todoList.forEach(function (item, i, arr) {\n        if (item.id === id) {\n          arr.splice(i, 1);\n        }\n      });\n    }\n  },\n  actions: {\n    addPoint: function addPoint(context, _ref5) {\n      var title = _ref5.title,\n          msg = _ref5.msg;\n      context.commit('addPoint', {\n        title: title,\n        msg: msg\n      });\n      localStorage.setItem('todoList', _JSON$stringify(this.state.todoList));\n      localStorage.setItem('todoList - currentId', this.state.currentId);\n    },\n    delPoint: function delPoint(context, _ref6) {\n      var id = _ref6.id;\n      context.commit('delPoint', {\n        id: id\n      });\n      localStorage.setItem('todoList', _JSON$stringify(this.state.todoList));\n    },\n    changeStatus: function changeStatus(context, _ref7) {\n      var id = _ref7.id;\n      context.commit('changeStatus', {\n        id: id\n      });\n      localStorage.setItem('todoList', _JSON$stringify(this.state.todoList));\n    },\n    changePoint: function changePoint(context, _ref8) {\n      var id = _ref8.id,\n          title = _ref8.title,\n          msg = _ref8.msg;\n      context.commit('changePoint', {\n        id: id,\n        title: title,\n        msg: msg\n      });\n      localStorage.setItem('todoList', _JSON$stringify(this.state.todoList));\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\a.nastarchuk\\Desktop\\projects\\routenvuex\\src\\store.js"],"names":["Vue","Vuex","use","Store","state","currentId","todoList","mutations","addPoint","title","msg","push","changePoint","id","forEach","item","changeStatus","i","arr","status","delPoint","splice","actions","context","commit","localStorage","setItem"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    currentId: 0,\n    todoList: []\n  },\n  mutations: {\n    addPoint (state, { title, msg }) {\n      state.todoList.push({\n        'id': state.currentId++,\n        'title': title,\n        'msg': msg,\n        'status': 'выполняется'\n      })\n    },\n    changePoint (state, { id, title, msg }) {\n      state.todoList.forEach(function (item) {\n        if (item.id === id) {\n          item.title = title\n          item.msg = msg\n        }\n      })\n    },\n    changeStatus (state, { id }) {\n      state.todoList.forEach(function (item, i, arr) {\n        if (item.id === id) {\n          item.status === 'выполняется' ? item.status = 'завершена' : item.status = 'выполняется'\n        }\n      })\n    },\n    delPoint (state, { id }) {\n      state.todoList.forEach(function (item, i, arr) {\n        if (item.id === id) {\n          arr.splice(i, 1)\n        }\n      })\n    }\n  },\n  actions: {\n    addPoint (context, { title, msg }) {\n\n        context.commit('addPoint', { title, msg })\n        localStorage.setItem('todoList', JSON.stringify(this.state.todoList))\n        localStorage.setItem('todoList - currentId', this.state.currentId)\n\n    },\n    delPoint (context, { id }) {\n      context.commit('delPoint', { id })\n      localStorage.setItem('todoList', JSON.stringify(this.state.todoList))\n    },\n    changeStatus (context, { id }) {\n      context.commit('changeStatus', { id })\n      localStorage.setItem('todoList', JSON.stringify(this.state.todoList))\n    },\n    changePoint (context, { id, title, msg }) {\n      context.commit('changePoint', { id, title, msg })\n      localStorage.setItem('todoList', JSON.stringify(this.state.todoList))\n    }\n  }\n})\n"]}]}